/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package models.avro.wager;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;

@org.apache.avro.specific.AvroGenerated
public class Wager extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8886984389306077600L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Wager\",\"namespace\":\"models.avro.wager\",\"fields\":[{\"name\":\"origin\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_origin\",\"fields\":[{\"name\":\"stream\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"environment\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"member\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_member\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"username\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"session\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_session\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"currency\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_currency\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"exchangeRate\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null},{\"name\":\"brand\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_brand\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"odds\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_odds\",\"fields\":[{\"name\":\"player\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_odds_player\",\"fields\":[{\"name\":\"format\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null},{\"name\":\"system\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_odds_system\",\"fields\":[{\"name\":\"format\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"stake\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_stake\",\"fields\":[{\"name\":\"amount\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"wallet\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_stake_wallet\",\"fields\":[{\"name\":\"compartment\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_stake_wallet_compartment\",\"fields\":[{\"name\":\"real\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_stake_wallet_compartment_real\",\"fields\":[{\"name\":\"amount\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null},{\"name\":\"virtual\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_stake_wallet_compartment_virtual\",\"fields\":[{\"name\":\"amount\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"potentialWinnings\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_potentialWinnings\",\"fields\":[{\"name\":\"amount\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"wallet\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_potentialWinnings_wallet\",\"fields\":[{\"name\":\"compartment\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_potentialWinnings_wallet_compartment\",\"fields\":[{\"name\":\"real\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_potentialWinnings_wallet_compartment_real\",\"fields\":[{\"name\":\"amount\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null},{\"name\":\"virtual\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_potentialWinnings_wallet_compartment_virtual\",\"fields\":[{\"name\":\"amount\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"gain\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_gain\",\"fields\":[{\"name\":\"amount\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"wallet\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_gain_wallet\",\"fields\":[{\"name\":\"compartment\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_gain_wallet_compartment\",\"fields\":[{\"name\":\"real\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_gain_wallet_compartment_real\",\"fields\":[{\"name\":\"amount\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null},{\"name\":\"virtual\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_gain_wallet_compartment_virtual\",\"fields\":[{\"name\":\"amount\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"numberOfSelections\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"createdAt\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"updatedAt\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"handledAt\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"acceptedAt\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"timestamp\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"selectedSystems\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\"}],\"default\":null},{\"name\":\"systemGroupName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"selectionCombineKey\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"selections\",\"type\":[{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Selection_selection\",\"namespace\":\"models.avro.wager.selections\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"eventInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Selection_selection_eventInfo\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"liveGamePeriod\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Selection_selection_eventInfo_liveGamePeriod\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"liveMinute\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"startDate\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"sport\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Selection_selection_eventInfo_sport\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"country\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Selection_selection_eventInfo_country\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"league\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Selection_selection_eventInfo_league\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"format\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"teams\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Selection_selection_eventInfo_teams\",\"fields\":[{\"name\":\"home\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Selection_selection_eventInfo_teams_home\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"away\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Selection_selection_eventInfo_teams_away\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}],\"default\":null},{\"name\":\"lineInfo\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Selection_selection_lineInfo\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"index\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"updatedAt\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"marketType\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Selection_selection_lineInfo_marketType\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"lineEntity\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Selection_selection_lineInfo_lineEntity\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"gamePeriod\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Selection_selection_lineInfo_gamePeriod\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"isValid\",\"","type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"spread\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null},{\"name\":\"odd\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Selection_selection_odd\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"key\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"format\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null}]},\"default\":[]},\"null\"],\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Wager> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Wager> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Wager> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Wager> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Wager> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Wager to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Wager from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Wager instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Wager fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private models.avro.wager.Wager_origin origin;
  private Long id;
  private CharSequence type;
  private CharSequence status;
  private CharSequence source;
  private models.avro.wager.Wager_member member;
  private models.avro.wager.Wager_session session;
  private models.avro.wager.Wager_currency currency;
  private models.avro.wager.Wager_brand brand;
  private models.avro.wager.Wager_odds odds;
  private models.avro.wager.Wager_stake stake;
  private models.avro.wager.Wager_potentialWinnings potentialWinnings;
  private models.avro.wager.Wager_gain gain;
  private Integer numberOfSelections;
  private CharSequence createdAt;
  private CharSequence updatedAt;
  private CharSequence handledAt;
  private CharSequence acceptedAt;
  private CharSequence timestamp;
  private java.util.List<Integer> selectedSystems;
  private CharSequence systemGroupName;
  private CharSequence selectionCombineKey;
  private java.util.List<models.avro.wager.selections.Selection_selection> selections;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Wager() {}

  /**
   * All-args constructor.
   * @param origin The new value for origin
   * @param id The new value for id
   * @param type The new value for type
   * @param status The new value for status
   * @param source The new value for source
   * @param member The new value for member
   * @param session The new value for session
   * @param currency The new value for currency
   * @param brand The new value for brand
   * @param odds The new value for odds
   * @param stake The new value for stake
   * @param potentialWinnings The new value for potentialWinnings
   * @param gain The new value for gain
   * @param numberOfSelections The new value for numberOfSelections
   * @param createdAt The new value for createdAt
   * @param updatedAt The new value for updatedAt
   * @param handledAt The new value for handledAt
   * @param acceptedAt The new value for acceptedAt
   * @param timestamp The new value for timestamp
   * @param selectedSystems The new value for selectedSystems
   * @param systemGroupName The new value for systemGroupName
   * @param selectionCombineKey The new value for selectionCombineKey
   * @param selections The new value for selections
   */
  public Wager(models.avro.wager.Wager_origin origin, Long id, CharSequence type, CharSequence status, CharSequence source, models.avro.wager.Wager_member member, models.avro.wager.Wager_session session, models.avro.wager.Wager_currency currency, models.avro.wager.Wager_brand brand, models.avro.wager.Wager_odds odds, models.avro.wager.Wager_stake stake, models.avro.wager.Wager_potentialWinnings potentialWinnings, models.avro.wager.Wager_gain gain, Integer numberOfSelections, CharSequence createdAt, CharSequence updatedAt, CharSequence handledAt, CharSequence acceptedAt, CharSequence timestamp, java.util.List<Integer> selectedSystems, CharSequence systemGroupName, CharSequence selectionCombineKey, java.util.List<models.avro.wager.selections.Selection_selection> selections) {
    this.origin = origin;
    this.id = id;
    this.type = type;
    this.status = status;
    this.source = source;
    this.member = member;
    this.session = session;
    this.currency = currency;
    this.brand = brand;
    this.odds = odds;
    this.stake = stake;
    this.potentialWinnings = potentialWinnings;
    this.gain = gain;
    this.numberOfSelections = numberOfSelections;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.handledAt = handledAt;
    this.acceptedAt = acceptedAt;
    this.timestamp = timestamp;
    this.selectedSystems = selectedSystems;
    this.systemGroupName = systemGroupName;
    this.selectionCombineKey = selectionCombineKey;
    this.selections = selections;
  }

  @Override
  public SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public Object get(int field$) {
    switch (field$) {
    case 0: return origin;
    case 1: return id;
    case 2: return type;
    case 3: return status;
    case 4: return source;
    case 5: return member;
    case 6: return session;
    case 7: return currency;
    case 8: return brand;
    case 9: return odds;
    case 10: return stake;
    case 11: return potentialWinnings;
    case 12: return gain;
    case 13: return numberOfSelections;
    case 14: return createdAt;
    case 15: return updatedAt;
    case 16: return handledAt;
    case 17: return acceptedAt;
    case 18: return timestamp;
    case 19: return selectedSystems;
    case 20: return systemGroupName;
    case 21: return selectionCombineKey;
    case 22: return selections;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: origin = (models.avro.wager.Wager_origin)value$; break;
    case 1: id = (Long)value$; break;
    case 2: type = (CharSequence)value$; break;
    case 3: status = (CharSequence)value$; break;
    case 4: source = (CharSequence)value$; break;
    case 5: member = (models.avro.wager.Wager_member)value$; break;
    case 6: session = (models.avro.wager.Wager_session)value$; break;
    case 7: currency = (models.avro.wager.Wager_currency)value$; break;
    case 8: brand = (models.avro.wager.Wager_brand)value$; break;
    case 9: odds = (models.avro.wager.Wager_odds)value$; break;
    case 10: stake = (models.avro.wager.Wager_stake)value$; break;
    case 11: potentialWinnings = (models.avro.wager.Wager_potentialWinnings)value$; break;
    case 12: gain = (models.avro.wager.Wager_gain)value$; break;
    case 13: numberOfSelections = (Integer)value$; break;
    case 14: createdAt = (CharSequence)value$; break;
    case 15: updatedAt = (CharSequence)value$; break;
    case 16: handledAt = (CharSequence)value$; break;
    case 17: acceptedAt = (CharSequence)value$; break;
    case 18: timestamp = (CharSequence)value$; break;
    case 19: selectedSystems = (java.util.List<Integer>)value$; break;
    case 20: systemGroupName = (CharSequence)value$; break;
    case 21: selectionCombineKey = (CharSequence)value$; break;
    case 22: selections = (java.util.List<models.avro.wager.selections.Selection_selection>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'origin' field.
   * @return The value of the 'origin' field.
   */
  public models.avro.wager.Wager_origin getOrigin() {
    return origin;
  }


  /**
   * Sets the value of the 'origin' field.
   * @param value the value to set.
   */
  public void setOrigin(models.avro.wager.Wager_origin value) {
    this.origin = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public CharSequence getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public CharSequence getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'source' field.
   * @return The value of the 'source' field.
   */
  public CharSequence getSource() {
    return source;
  }


  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'member' field.
   * @return The value of the 'member' field.
   */
  public models.avro.wager.Wager_member getMember() {
    return member;
  }


  /**
   * Sets the value of the 'member' field.
   * @param value the value to set.
   */
  public void setMember(models.avro.wager.Wager_member value) {
    this.member = value;
  }

  /**
   * Gets the value of the 'session' field.
   * @return The value of the 'session' field.
   */
  public models.avro.wager.Wager_session getSession() {
    return session;
  }


  /**
   * Sets the value of the 'session' field.
   * @param value the value to set.
   */
  public void setSession(models.avro.wager.Wager_session value) {
    this.session = value;
  }

  /**
   * Gets the value of the 'currency' field.
   * @return The value of the 'currency' field.
   */
  public models.avro.wager.Wager_currency getCurrency() {
    return currency;
  }


  /**
   * Sets the value of the 'currency' field.
   * @param value the value to set.
   */
  public void setCurrency(models.avro.wager.Wager_currency value) {
    this.currency = value;
  }

  /**
   * Gets the value of the 'brand' field.
   * @return The value of the 'brand' field.
   */
  public models.avro.wager.Wager_brand getBrand() {
    return brand;
  }


  /**
   * Sets the value of the 'brand' field.
   * @param value the value to set.
   */
  public void setBrand(models.avro.wager.Wager_brand value) {
    this.brand = value;
  }

  /**
   * Gets the value of the 'odds' field.
   * @return The value of the 'odds' field.
   */
  public models.avro.wager.Wager_odds getOdds() {
    return odds;
  }


  /**
   * Sets the value of the 'odds' field.
   * @param value the value to set.
   */
  public void setOdds(models.avro.wager.Wager_odds value) {
    this.odds = value;
  }

  /**
   * Gets the value of the 'stake' field.
   * @return The value of the 'stake' field.
   */
  public models.avro.wager.Wager_stake getStake() {
    return stake;
  }


  /**
   * Sets the value of the 'stake' field.
   * @param value the value to set.
   */
  public void setStake(models.avro.wager.Wager_stake value) {
    this.stake = value;
  }

  /**
   * Gets the value of the 'potentialWinnings' field.
   * @return The value of the 'potentialWinnings' field.
   */
  public models.avro.wager.Wager_potentialWinnings getPotentialWinnings() {
    return potentialWinnings;
  }


  /**
   * Sets the value of the 'potentialWinnings' field.
   * @param value the value to set.
   */
  public void setPotentialWinnings(models.avro.wager.Wager_potentialWinnings value) {
    this.potentialWinnings = value;
  }

  /**
   * Gets the value of the 'gain' field.
   * @return The value of the 'gain' field.
   */
  public models.avro.wager.Wager_gain getGain() {
    return gain;
  }


  /**
   * Sets the value of the 'gain' field.
   * @param value the value to set.
   */
  public void setGain(models.avro.wager.Wager_gain value) {
    this.gain = value;
  }

  /**
   * Gets the value of the 'numberOfSelections' field.
   * @return The value of the 'numberOfSelections' field.
   */
  public Integer getNumberOfSelections() {
    return numberOfSelections;
  }


  /**
   * Sets the value of the 'numberOfSelections' field.
   * @param value the value to set.
   */
  public void setNumberOfSelections(Integer value) {
    this.numberOfSelections = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public CharSequence getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(CharSequence value) {
    this.createdAt = value;
  }

  /**
   * Gets the value of the 'updatedAt' field.
   * @return The value of the 'updatedAt' field.
   */
  public CharSequence getUpdatedAt() {
    return updatedAt;
  }


  /**
   * Sets the value of the 'updatedAt' field.
   * @param value the value to set.
   */
  public void setUpdatedAt(CharSequence value) {
    this.updatedAt = value;
  }

  /**
   * Gets the value of the 'handledAt' field.
   * @return The value of the 'handledAt' field.
   */
  public CharSequence getHandledAt() {
    return handledAt;
  }


  /**
   * Sets the value of the 'handledAt' field.
   * @param value the value to set.
   */
  public void setHandledAt(CharSequence value) {
    this.handledAt = value;
  }

  /**
   * Gets the value of the 'acceptedAt' field.
   * @return The value of the 'acceptedAt' field.
   */
  public CharSequence getAcceptedAt() {
    return acceptedAt;
  }


  /**
   * Sets the value of the 'acceptedAt' field.
   * @param value the value to set.
   */
  public void setAcceptedAt(CharSequence value) {
    this.acceptedAt = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public CharSequence getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(CharSequence value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'selectedSystems' field.
   * @return The value of the 'selectedSystems' field.
   */
  public java.util.List<Integer> getSelectedSystems() {
    return selectedSystems;
  }


  /**
   * Sets the value of the 'selectedSystems' field.
   * @param value the value to set.
   */
  public void setSelectedSystems(java.util.List<Integer> value) {
    this.selectedSystems = value;
  }

  /**
   * Gets the value of the 'systemGroupName' field.
   * @return The value of the 'systemGroupName' field.
   */
  public CharSequence getSystemGroupName() {
    return systemGroupName;
  }


  /**
   * Sets the value of the 'systemGroupName' field.
   * @param value the value to set.
   */
  public void setSystemGroupName(CharSequence value) {
    this.systemGroupName = value;
  }

  /**
   * Gets the value of the 'selectionCombineKey' field.
   * @return The value of the 'selectionCombineKey' field.
   */
  public CharSequence getSelectionCombineKey() {
    return selectionCombineKey;
  }


  /**
   * Sets the value of the 'selectionCombineKey' field.
   * @param value the value to set.
   */
  public void setSelectionCombineKey(CharSequence value) {
    this.selectionCombineKey = value;
  }

  /**
   * Gets the value of the 'selections' field.
   * @return The value of the 'selections' field.
   */
  public java.util.List<models.avro.wager.selections.Selection_selection> getSelections() {
    return selections;
  }


  /**
   * Sets the value of the 'selections' field.
   * @param value the value to set.
   */
  public void setSelections(java.util.List<models.avro.wager.selections.Selection_selection> value) {
    this.selections = value;
  }

  /**
   * Creates a new Wager RecordBuilder.
   * @return A new Wager RecordBuilder
   */
  public static models.avro.wager.Wager.Builder newBuilder() {
    return new models.avro.wager.Wager.Builder();
  }

  /**
   * Creates a new Wager RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Wager RecordBuilder
   */
  public static models.avro.wager.Wager.Builder newBuilder(models.avro.wager.Wager.Builder other) {
    if (other == null) {
      return new models.avro.wager.Wager.Builder();
    } else {
      return new models.avro.wager.Wager.Builder(other);
    }
  }

  /**
   * Creates a new Wager RecordBuilder by copying an existing Wager instance.
   * @param other The existing instance to copy.
   * @return A new Wager RecordBuilder
   */
  public static models.avro.wager.Wager.Builder newBuilder(models.avro.wager.Wager other) {
    if (other == null) {
      return new models.avro.wager.Wager.Builder();
    } else {
      return new models.avro.wager.Wager.Builder(other);
    }
  }

  /**
   * RecordBuilder for Wager instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Wager>
    implements org.apache.avro.data.RecordBuilder<Wager> {

    private models.avro.wager.Wager_origin origin;
    private models.avro.wager.Wager_origin.Builder originBuilder;
    private Long id;
    private CharSequence type;
    private CharSequence status;
    private CharSequence source;
    private models.avro.wager.Wager_member member;
    private models.avro.wager.Wager_member.Builder memberBuilder;
    private models.avro.wager.Wager_session session;
    private models.avro.wager.Wager_session.Builder sessionBuilder;
    private models.avro.wager.Wager_currency currency;
    private models.avro.wager.Wager_currency.Builder currencyBuilder;
    private models.avro.wager.Wager_brand brand;
    private models.avro.wager.Wager_brand.Builder brandBuilder;
    private models.avro.wager.Wager_odds odds;
    private models.avro.wager.Wager_odds.Builder oddsBuilder;
    private models.avro.wager.Wager_stake stake;
    private models.avro.wager.Wager_stake.Builder stakeBuilder;
    private models.avro.wager.Wager_potentialWinnings potentialWinnings;
    private models.avro.wager.Wager_potentialWinnings.Builder potentialWinningsBuilder;
    private models.avro.wager.Wager_gain gain;
    private models.avro.wager.Wager_gain.Builder gainBuilder;
    private Integer numberOfSelections;
    private CharSequence createdAt;
    private CharSequence updatedAt;
    private CharSequence handledAt;
    private CharSequence acceptedAt;
    private CharSequence timestamp;
    private java.util.List<Integer> selectedSystems;
    private CharSequence systemGroupName;
    private CharSequence selectionCombineKey;
    private java.util.List<models.avro.wager.selections.Selection_selection> selections;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(models.avro.wager.Wager.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.origin)) {
        this.origin = data().deepCopy(fields()[0].schema(), other.origin);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasOriginBuilder()) {
        this.originBuilder = models.avro.wager.Wager_origin.newBuilder(other.getOriginBuilder());
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.source)) {
        this.source = data().deepCopy(fields()[4].schema(), other.source);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.member)) {
        this.member = data().deepCopy(fields()[5].schema(), other.member);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasMemberBuilder()) {
        this.memberBuilder = models.avro.wager.Wager_member.newBuilder(other.getMemberBuilder());
      }
      if (isValidValue(fields()[6], other.session)) {
        this.session = data().deepCopy(fields()[6].schema(), other.session);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasSessionBuilder()) {
        this.sessionBuilder = models.avro.wager.Wager_session.newBuilder(other.getSessionBuilder());
      }
      if (isValidValue(fields()[7], other.currency)) {
        this.currency = data().deepCopy(fields()[7].schema(), other.currency);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasCurrencyBuilder()) {
        this.currencyBuilder = models.avro.wager.Wager_currency.newBuilder(other.getCurrencyBuilder());
      }
      if (isValidValue(fields()[8], other.brand)) {
        this.brand = data().deepCopy(fields()[8].schema(), other.brand);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (other.hasBrandBuilder()) {
        this.brandBuilder = models.avro.wager.Wager_brand.newBuilder(other.getBrandBuilder());
      }
      if (isValidValue(fields()[9], other.odds)) {
        this.odds = data().deepCopy(fields()[9].schema(), other.odds);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (other.hasOddsBuilder()) {
        this.oddsBuilder = models.avro.wager.Wager_odds.newBuilder(other.getOddsBuilder());
      }
      if (isValidValue(fields()[10], other.stake)) {
        this.stake = data().deepCopy(fields()[10].schema(), other.stake);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (other.hasStakeBuilder()) {
        this.stakeBuilder = models.avro.wager.Wager_stake.newBuilder(other.getStakeBuilder());
      }
      if (isValidValue(fields()[11], other.potentialWinnings)) {
        this.potentialWinnings = data().deepCopy(fields()[11].schema(), other.potentialWinnings);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (other.hasPotentialWinningsBuilder()) {
        this.potentialWinningsBuilder = models.avro.wager.Wager_potentialWinnings.newBuilder(other.getPotentialWinningsBuilder());
      }
      if (isValidValue(fields()[12], other.gain)) {
        this.gain = data().deepCopy(fields()[12].schema(), other.gain);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasGainBuilder()) {
        this.gainBuilder = models.avro.wager.Wager_gain.newBuilder(other.getGainBuilder());
      }
      if (isValidValue(fields()[13], other.numberOfSelections)) {
        this.numberOfSelections = data().deepCopy(fields()[13].schema(), other.numberOfSelections);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[14].schema(), other.createdAt);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[15].schema(), other.updatedAt);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.handledAt)) {
        this.handledAt = data().deepCopy(fields()[16].schema(), other.handledAt);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.acceptedAt)) {
        this.acceptedAt = data().deepCopy(fields()[17].schema(), other.acceptedAt);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[18].schema(), other.timestamp);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.selectedSystems)) {
        this.selectedSystems = data().deepCopy(fields()[19].schema(), other.selectedSystems);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.systemGroupName)) {
        this.systemGroupName = data().deepCopy(fields()[20].schema(), other.systemGroupName);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.selectionCombineKey)) {
        this.selectionCombineKey = data().deepCopy(fields()[21].schema(), other.selectionCombineKey);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.selections)) {
        this.selections = data().deepCopy(fields()[22].schema(), other.selections);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
    }

    /**
     * Creates a Builder by copying an existing Wager instance
     * @param other The existing instance to copy.
     */
    private Builder(models.avro.wager.Wager other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.origin)) {
        this.origin = data().deepCopy(fields()[0].schema(), other.origin);
        fieldSetFlags()[0] = true;
      }
      this.originBuilder = null;
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.source)) {
        this.source = data().deepCopy(fields()[4].schema(), other.source);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.member)) {
        this.member = data().deepCopy(fields()[5].schema(), other.member);
        fieldSetFlags()[5] = true;
      }
      this.memberBuilder = null;
      if (isValidValue(fields()[6], other.session)) {
        this.session = data().deepCopy(fields()[6].schema(), other.session);
        fieldSetFlags()[6] = true;
      }
      this.sessionBuilder = null;
      if (isValidValue(fields()[7], other.currency)) {
        this.currency = data().deepCopy(fields()[7].schema(), other.currency);
        fieldSetFlags()[7] = true;
      }
      this.currencyBuilder = null;
      if (isValidValue(fields()[8], other.brand)) {
        this.brand = data().deepCopy(fields()[8].schema(), other.brand);
        fieldSetFlags()[8] = true;
      }
      this.brandBuilder = null;
      if (isValidValue(fields()[9], other.odds)) {
        this.odds = data().deepCopy(fields()[9].schema(), other.odds);
        fieldSetFlags()[9] = true;
      }
      this.oddsBuilder = null;
      if (isValidValue(fields()[10], other.stake)) {
        this.stake = data().deepCopy(fields()[10].schema(), other.stake);
        fieldSetFlags()[10] = true;
      }
      this.stakeBuilder = null;
      if (isValidValue(fields()[11], other.potentialWinnings)) {
        this.potentialWinnings = data().deepCopy(fields()[11].schema(), other.potentialWinnings);
        fieldSetFlags()[11] = true;
      }
      this.potentialWinningsBuilder = null;
      if (isValidValue(fields()[12], other.gain)) {
        this.gain = data().deepCopy(fields()[12].schema(), other.gain);
        fieldSetFlags()[12] = true;
      }
      this.gainBuilder = null;
      if (isValidValue(fields()[13], other.numberOfSelections)) {
        this.numberOfSelections = data().deepCopy(fields()[13].schema(), other.numberOfSelections);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[14].schema(), other.createdAt);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[15].schema(), other.updatedAt);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.handledAt)) {
        this.handledAt = data().deepCopy(fields()[16].schema(), other.handledAt);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.acceptedAt)) {
        this.acceptedAt = data().deepCopy(fields()[17].schema(), other.acceptedAt);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[18].schema(), other.timestamp);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.selectedSystems)) {
        this.selectedSystems = data().deepCopy(fields()[19].schema(), other.selectedSystems);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.systemGroupName)) {
        this.systemGroupName = data().deepCopy(fields()[20].schema(), other.systemGroupName);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.selectionCombineKey)) {
        this.selectionCombineKey = data().deepCopy(fields()[21].schema(), other.selectionCombineKey);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.selections)) {
        this.selections = data().deepCopy(fields()[22].schema(), other.selections);
        fieldSetFlags()[22] = true;
      }
    }

    /**
      * Gets the value of the 'origin' field.
      * @return The value.
      */
    public models.avro.wager.Wager_origin getOrigin() {
      return origin;
    }


    /**
      * Sets the value of the 'origin' field.
      * @param value The value of 'origin'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setOrigin(models.avro.wager.Wager_origin value) {
      validate(fields()[0], value);
      this.originBuilder = null;
      this.origin = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'origin' field has been set.
      * @return True if the 'origin' field has been set, false otherwise.
      */
    public boolean hasOrigin() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'origin' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public models.avro.wager.Wager_origin.Builder getOriginBuilder() {
      if (originBuilder == null) {
        if (hasOrigin()) {
          setOriginBuilder(models.avro.wager.Wager_origin.newBuilder(origin));
        } else {
          setOriginBuilder(models.avro.wager.Wager_origin.newBuilder());
        }
      }
      return originBuilder;
    }

    /**
     * Sets the Builder instance for the 'origin' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public models.avro.wager.Wager.Builder setOriginBuilder(models.avro.wager.Wager_origin.Builder value) {
      clearOrigin();
      originBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'origin' field has an active Builder instance
     * @return True if the 'origin' field has an active Builder instance
     */
    public boolean hasOriginBuilder() {
      return originBuilder != null;
    }

    /**
      * Clears the value of the 'origin' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearOrigin() {
      origin = null;
      originBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setId(Long value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearId() {
      id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public CharSequence getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setType(CharSequence value) {
      validate(fields()[2], value);
      this.type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearType() {
      type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public CharSequence getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setStatus(CharSequence value) {
      validate(fields()[3], value);
      this.status = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearStatus() {
      status = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * @return The value.
      */
    public CharSequence getSource() {
      return source;
    }


    /**
      * Sets the value of the 'source' field.
      * @param value The value of 'source'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setSource(CharSequence value) {
      validate(fields()[4], value);
      this.source = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'source' field has been set.
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'source' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearSource() {
      source = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'member' field.
      * @return The value.
      */
    public models.avro.wager.Wager_member getMember() {
      return member;
    }


    /**
      * Sets the value of the 'member' field.
      * @param value The value of 'member'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setMember(models.avro.wager.Wager_member value) {
      validate(fields()[5], value);
      this.memberBuilder = null;
      this.member = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'member' field has been set.
      * @return True if the 'member' field has been set, false otherwise.
      */
    public boolean hasMember() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'member' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public models.avro.wager.Wager_member.Builder getMemberBuilder() {
      if (memberBuilder == null) {
        if (hasMember()) {
          setMemberBuilder(models.avro.wager.Wager_member.newBuilder(member));
        } else {
          setMemberBuilder(models.avro.wager.Wager_member.newBuilder());
        }
      }
      return memberBuilder;
    }

    /**
     * Sets the Builder instance for the 'member' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public models.avro.wager.Wager.Builder setMemberBuilder(models.avro.wager.Wager_member.Builder value) {
      clearMember();
      memberBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'member' field has an active Builder instance
     * @return True if the 'member' field has an active Builder instance
     */
    public boolean hasMemberBuilder() {
      return memberBuilder != null;
    }

    /**
      * Clears the value of the 'member' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearMember() {
      member = null;
      memberBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'session' field.
      * @return The value.
      */
    public models.avro.wager.Wager_session getSession() {
      return session;
    }


    /**
      * Sets the value of the 'session' field.
      * @param value The value of 'session'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setSession(models.avro.wager.Wager_session value) {
      validate(fields()[6], value);
      this.sessionBuilder = null;
      this.session = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'session' field has been set.
      * @return True if the 'session' field has been set, false otherwise.
      */
    public boolean hasSession() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'session' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public models.avro.wager.Wager_session.Builder getSessionBuilder() {
      if (sessionBuilder == null) {
        if (hasSession()) {
          setSessionBuilder(models.avro.wager.Wager_session.newBuilder(session));
        } else {
          setSessionBuilder(models.avro.wager.Wager_session.newBuilder());
        }
      }
      return sessionBuilder;
    }

    /**
     * Sets the Builder instance for the 'session' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public models.avro.wager.Wager.Builder setSessionBuilder(models.avro.wager.Wager_session.Builder value) {
      clearSession();
      sessionBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'session' field has an active Builder instance
     * @return True if the 'session' field has an active Builder instance
     */
    public boolean hasSessionBuilder() {
      return sessionBuilder != null;
    }

    /**
      * Clears the value of the 'session' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearSession() {
      session = null;
      sessionBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'currency' field.
      * @return The value.
      */
    public models.avro.wager.Wager_currency getCurrency() {
      return currency;
    }


    /**
      * Sets the value of the 'currency' field.
      * @param value The value of 'currency'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setCurrency(models.avro.wager.Wager_currency value) {
      validate(fields()[7], value);
      this.currencyBuilder = null;
      this.currency = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'currency' field has been set.
      * @return True if the 'currency' field has been set, false otherwise.
      */
    public boolean hasCurrency() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'currency' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public models.avro.wager.Wager_currency.Builder getCurrencyBuilder() {
      if (currencyBuilder == null) {
        if (hasCurrency()) {
          setCurrencyBuilder(models.avro.wager.Wager_currency.newBuilder(currency));
        } else {
          setCurrencyBuilder(models.avro.wager.Wager_currency.newBuilder());
        }
      }
      return currencyBuilder;
    }

    /**
     * Sets the Builder instance for the 'currency' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public models.avro.wager.Wager.Builder setCurrencyBuilder(models.avro.wager.Wager_currency.Builder value) {
      clearCurrency();
      currencyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'currency' field has an active Builder instance
     * @return True if the 'currency' field has an active Builder instance
     */
    public boolean hasCurrencyBuilder() {
      return currencyBuilder != null;
    }

    /**
      * Clears the value of the 'currency' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearCurrency() {
      currency = null;
      currencyBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'brand' field.
      * @return The value.
      */
    public models.avro.wager.Wager_brand getBrand() {
      return brand;
    }


    /**
      * Sets the value of the 'brand' field.
      * @param value The value of 'brand'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setBrand(models.avro.wager.Wager_brand value) {
      validate(fields()[8], value);
      this.brandBuilder = null;
      this.brand = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'brand' field has been set.
      * @return True if the 'brand' field has been set, false otherwise.
      */
    public boolean hasBrand() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'brand' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public models.avro.wager.Wager_brand.Builder getBrandBuilder() {
      if (brandBuilder == null) {
        if (hasBrand()) {
          setBrandBuilder(models.avro.wager.Wager_brand.newBuilder(brand));
        } else {
          setBrandBuilder(models.avro.wager.Wager_brand.newBuilder());
        }
      }
      return brandBuilder;
    }

    /**
     * Sets the Builder instance for the 'brand' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public models.avro.wager.Wager.Builder setBrandBuilder(models.avro.wager.Wager_brand.Builder value) {
      clearBrand();
      brandBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'brand' field has an active Builder instance
     * @return True if the 'brand' field has an active Builder instance
     */
    public boolean hasBrandBuilder() {
      return brandBuilder != null;
    }

    /**
      * Clears the value of the 'brand' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearBrand() {
      brand = null;
      brandBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'odds' field.
      * @return The value.
      */
    public models.avro.wager.Wager_odds getOdds() {
      return odds;
    }


    /**
      * Sets the value of the 'odds' field.
      * @param value The value of 'odds'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setOdds(models.avro.wager.Wager_odds value) {
      validate(fields()[9], value);
      this.oddsBuilder = null;
      this.odds = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'odds' field has been set.
      * @return True if the 'odds' field has been set, false otherwise.
      */
    public boolean hasOdds() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'odds' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public models.avro.wager.Wager_odds.Builder getOddsBuilder() {
      if (oddsBuilder == null) {
        if (hasOdds()) {
          setOddsBuilder(models.avro.wager.Wager_odds.newBuilder(odds));
        } else {
          setOddsBuilder(models.avro.wager.Wager_odds.newBuilder());
        }
      }
      return oddsBuilder;
    }

    /**
     * Sets the Builder instance for the 'odds' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public models.avro.wager.Wager.Builder setOddsBuilder(models.avro.wager.Wager_odds.Builder value) {
      clearOdds();
      oddsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'odds' field has an active Builder instance
     * @return True if the 'odds' field has an active Builder instance
     */
    public boolean hasOddsBuilder() {
      return oddsBuilder != null;
    }

    /**
      * Clears the value of the 'odds' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearOdds() {
      odds = null;
      oddsBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'stake' field.
      * @return The value.
      */
    public models.avro.wager.Wager_stake getStake() {
      return stake;
    }


    /**
      * Sets the value of the 'stake' field.
      * @param value The value of 'stake'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setStake(models.avro.wager.Wager_stake value) {
      validate(fields()[10], value);
      this.stakeBuilder = null;
      this.stake = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'stake' field has been set.
      * @return True if the 'stake' field has been set, false otherwise.
      */
    public boolean hasStake() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'stake' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public models.avro.wager.Wager_stake.Builder getStakeBuilder() {
      if (stakeBuilder == null) {
        if (hasStake()) {
          setStakeBuilder(models.avro.wager.Wager_stake.newBuilder(stake));
        } else {
          setStakeBuilder(models.avro.wager.Wager_stake.newBuilder());
        }
      }
      return stakeBuilder;
    }

    /**
     * Sets the Builder instance for the 'stake' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public models.avro.wager.Wager.Builder setStakeBuilder(models.avro.wager.Wager_stake.Builder value) {
      clearStake();
      stakeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'stake' field has an active Builder instance
     * @return True if the 'stake' field has an active Builder instance
     */
    public boolean hasStakeBuilder() {
      return stakeBuilder != null;
    }

    /**
      * Clears the value of the 'stake' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearStake() {
      stake = null;
      stakeBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'potentialWinnings' field.
      * @return The value.
      */
    public models.avro.wager.Wager_potentialWinnings getPotentialWinnings() {
      return potentialWinnings;
    }


    /**
      * Sets the value of the 'potentialWinnings' field.
      * @param value The value of 'potentialWinnings'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setPotentialWinnings(models.avro.wager.Wager_potentialWinnings value) {
      validate(fields()[11], value);
      this.potentialWinningsBuilder = null;
      this.potentialWinnings = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'potentialWinnings' field has been set.
      * @return True if the 'potentialWinnings' field has been set, false otherwise.
      */
    public boolean hasPotentialWinnings() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'potentialWinnings' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public models.avro.wager.Wager_potentialWinnings.Builder getPotentialWinningsBuilder() {
      if (potentialWinningsBuilder == null) {
        if (hasPotentialWinnings()) {
          setPotentialWinningsBuilder(models.avro.wager.Wager_potentialWinnings.newBuilder(potentialWinnings));
        } else {
          setPotentialWinningsBuilder(models.avro.wager.Wager_potentialWinnings.newBuilder());
        }
      }
      return potentialWinningsBuilder;
    }

    /**
     * Sets the Builder instance for the 'potentialWinnings' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public models.avro.wager.Wager.Builder setPotentialWinningsBuilder(models.avro.wager.Wager_potentialWinnings.Builder value) {
      clearPotentialWinnings();
      potentialWinningsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'potentialWinnings' field has an active Builder instance
     * @return True if the 'potentialWinnings' field has an active Builder instance
     */
    public boolean hasPotentialWinningsBuilder() {
      return potentialWinningsBuilder != null;
    }

    /**
      * Clears the value of the 'potentialWinnings' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearPotentialWinnings() {
      potentialWinnings = null;
      potentialWinningsBuilder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'gain' field.
      * @return The value.
      */
    public models.avro.wager.Wager_gain getGain() {
      return gain;
    }


    /**
      * Sets the value of the 'gain' field.
      * @param value The value of 'gain'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setGain(models.avro.wager.Wager_gain value) {
      validate(fields()[12], value);
      this.gainBuilder = null;
      this.gain = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'gain' field has been set.
      * @return True if the 'gain' field has been set, false otherwise.
      */
    public boolean hasGain() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'gain' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public models.avro.wager.Wager_gain.Builder getGainBuilder() {
      if (gainBuilder == null) {
        if (hasGain()) {
          setGainBuilder(models.avro.wager.Wager_gain.newBuilder(gain));
        } else {
          setGainBuilder(models.avro.wager.Wager_gain.newBuilder());
        }
      }
      return gainBuilder;
    }

    /**
     * Sets the Builder instance for the 'gain' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public models.avro.wager.Wager.Builder setGainBuilder(models.avro.wager.Wager_gain.Builder value) {
      clearGain();
      gainBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'gain' field has an active Builder instance
     * @return True if the 'gain' field has an active Builder instance
     */
    public boolean hasGainBuilder() {
      return gainBuilder != null;
    }

    /**
      * Clears the value of the 'gain' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearGain() {
      gain = null;
      gainBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'numberOfSelections' field.
      * @return The value.
      */
    public Integer getNumberOfSelections() {
      return numberOfSelections;
    }


    /**
      * Sets the value of the 'numberOfSelections' field.
      * @param value The value of 'numberOfSelections'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setNumberOfSelections(Integer value) {
      validate(fields()[13], value);
      this.numberOfSelections = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'numberOfSelections' field has been set.
      * @return True if the 'numberOfSelections' field has been set, false otherwise.
      */
    public boolean hasNumberOfSelections() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'numberOfSelections' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearNumberOfSelections() {
      numberOfSelections = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public CharSequence getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setCreatedAt(CharSequence value) {
      validate(fields()[14], value);
      this.createdAt = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearCreatedAt() {
      createdAt = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'updatedAt' field.
      * @return The value.
      */
    public CharSequence getUpdatedAt() {
      return updatedAt;
    }


    /**
      * Sets the value of the 'updatedAt' field.
      * @param value The value of 'updatedAt'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setUpdatedAt(CharSequence value) {
      validate(fields()[15], value);
      this.updatedAt = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'updatedAt' field has been set.
      * @return True if the 'updatedAt' field has been set, false otherwise.
      */
    public boolean hasUpdatedAt() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'updatedAt' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearUpdatedAt() {
      updatedAt = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'handledAt' field.
      * @return The value.
      */
    public CharSequence getHandledAt() {
      return handledAt;
    }


    /**
      * Sets the value of the 'handledAt' field.
      * @param value The value of 'handledAt'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setHandledAt(CharSequence value) {
      validate(fields()[16], value);
      this.handledAt = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'handledAt' field has been set.
      * @return True if the 'handledAt' field has been set, false otherwise.
      */
    public boolean hasHandledAt() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'handledAt' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearHandledAt() {
      handledAt = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'acceptedAt' field.
      * @return The value.
      */
    public CharSequence getAcceptedAt() {
      return acceptedAt;
    }


    /**
      * Sets the value of the 'acceptedAt' field.
      * @param value The value of 'acceptedAt'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setAcceptedAt(CharSequence value) {
      validate(fields()[17], value);
      this.acceptedAt = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'acceptedAt' field has been set.
      * @return True if the 'acceptedAt' field has been set, false otherwise.
      */
    public boolean hasAcceptedAt() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'acceptedAt' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearAcceptedAt() {
      acceptedAt = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public CharSequence getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setTimestamp(CharSequence value) {
      validate(fields()[18], value);
      this.timestamp = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'selectedSystems' field.
      * @return The value.
      */
    public java.util.List<Integer> getSelectedSystems() {
      return selectedSystems;
    }


    /**
      * Sets the value of the 'selectedSystems' field.
      * @param value The value of 'selectedSystems'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setSelectedSystems(java.util.List<Integer> value) {
      validate(fields()[19], value);
      this.selectedSystems = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'selectedSystems' field has been set.
      * @return True if the 'selectedSystems' field has been set, false otherwise.
      */
    public boolean hasSelectedSystems() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'selectedSystems' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearSelectedSystems() {
      selectedSystems = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'systemGroupName' field.
      * @return The value.
      */
    public CharSequence getSystemGroupName() {
      return systemGroupName;
    }


    /**
      * Sets the value of the 'systemGroupName' field.
      * @param value The value of 'systemGroupName'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setSystemGroupName(CharSequence value) {
      validate(fields()[20], value);
      this.systemGroupName = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'systemGroupName' field has been set.
      * @return True if the 'systemGroupName' field has been set, false otherwise.
      */
    public boolean hasSystemGroupName() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'systemGroupName' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearSystemGroupName() {
      systemGroupName = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'selectionCombineKey' field.
      * @return The value.
      */
    public CharSequence getSelectionCombineKey() {
      return selectionCombineKey;
    }


    /**
      * Sets the value of the 'selectionCombineKey' field.
      * @param value The value of 'selectionCombineKey'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setSelectionCombineKey(CharSequence value) {
      validate(fields()[21], value);
      this.selectionCombineKey = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'selectionCombineKey' field has been set.
      * @return True if the 'selectionCombineKey' field has been set, false otherwise.
      */
    public boolean hasSelectionCombineKey() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'selectionCombineKey' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearSelectionCombineKey() {
      selectionCombineKey = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'selections' field.
      * @return The value.
      */
    public java.util.List<models.avro.wager.selections.Selection_selection> getSelections() {
      return selections;
    }


    /**
      * Sets the value of the 'selections' field.
      * @param value The value of 'selections'.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder setSelections(java.util.List<models.avro.wager.selections.Selection_selection> value) {
      validate(fields()[22], value);
      this.selections = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'selections' field has been set.
      * @return True if the 'selections' field has been set, false otherwise.
      */
    public boolean hasSelections() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'selections' field.
      * @return This builder.
      */
    public models.avro.wager.Wager.Builder clearSelections() {
      selections = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Wager build() {
      try {
        Wager record = new Wager();
        if (originBuilder != null) {
          try {
            record.origin = this.originBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("origin"));
            throw e;
          }
        } else {
          record.origin = fieldSetFlags()[0] ? this.origin : (models.avro.wager.Wager_origin) defaultValue(fields()[0]);
        }
        record.id = fieldSetFlags()[1] ? this.id : (Long) defaultValue(fields()[1]);
        record.type = fieldSetFlags()[2] ? this.type : (CharSequence) defaultValue(fields()[2]);
        record.status = fieldSetFlags()[3] ? this.status : (CharSequence) defaultValue(fields()[3]);
        record.source = fieldSetFlags()[4] ? this.source : (CharSequence) defaultValue(fields()[4]);
        if (memberBuilder != null) {
          try {
            record.member = this.memberBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("member"));
            throw e;
          }
        } else {
          record.member = fieldSetFlags()[5] ? this.member : (models.avro.wager.Wager_member) defaultValue(fields()[5]);
        }
        if (sessionBuilder != null) {
          try {
            record.session = this.sessionBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("session"));
            throw e;
          }
        } else {
          record.session = fieldSetFlags()[6] ? this.session : (models.avro.wager.Wager_session) defaultValue(fields()[6]);
        }
        if (currencyBuilder != null) {
          try {
            record.currency = this.currencyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("currency"));
            throw e;
          }
        } else {
          record.currency = fieldSetFlags()[7] ? this.currency : (models.avro.wager.Wager_currency) defaultValue(fields()[7]);
        }
        if (brandBuilder != null) {
          try {
            record.brand = this.brandBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("brand"));
            throw e;
          }
        } else {
          record.brand = fieldSetFlags()[8] ? this.brand : (models.avro.wager.Wager_brand) defaultValue(fields()[8]);
        }
        if (oddsBuilder != null) {
          try {
            record.odds = this.oddsBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("odds"));
            throw e;
          }
        } else {
          record.odds = fieldSetFlags()[9] ? this.odds : (models.avro.wager.Wager_odds) defaultValue(fields()[9]);
        }
        if (stakeBuilder != null) {
          try {
            record.stake = this.stakeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("stake"));
            throw e;
          }
        } else {
          record.stake = fieldSetFlags()[10] ? this.stake : (models.avro.wager.Wager_stake) defaultValue(fields()[10]);
        }
        if (potentialWinningsBuilder != null) {
          try {
            record.potentialWinnings = this.potentialWinningsBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("potentialWinnings"));
            throw e;
          }
        } else {
          record.potentialWinnings = fieldSetFlags()[11] ? this.potentialWinnings : (models.avro.wager.Wager_potentialWinnings) defaultValue(fields()[11]);
        }
        if (gainBuilder != null) {
          try {
            record.gain = this.gainBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("gain"));
            throw e;
          }
        } else {
          record.gain = fieldSetFlags()[12] ? this.gain : (models.avro.wager.Wager_gain) defaultValue(fields()[12]);
        }
        record.numberOfSelections = fieldSetFlags()[13] ? this.numberOfSelections : (Integer) defaultValue(fields()[13]);
        record.createdAt = fieldSetFlags()[14] ? this.createdAt : (CharSequence) defaultValue(fields()[14]);
        record.updatedAt = fieldSetFlags()[15] ? this.updatedAt : (CharSequence) defaultValue(fields()[15]);
        record.handledAt = fieldSetFlags()[16] ? this.handledAt : (CharSequence) defaultValue(fields()[16]);
        record.acceptedAt = fieldSetFlags()[17] ? this.acceptedAt : (CharSequence) defaultValue(fields()[17]);
        record.timestamp = fieldSetFlags()[18] ? this.timestamp : (CharSequence) defaultValue(fields()[18]);
        record.selectedSystems = fieldSetFlags()[19] ? this.selectedSystems : (java.util.List<Integer>) defaultValue(fields()[19]);
        record.systemGroupName = fieldSetFlags()[20] ? this.systemGroupName : (CharSequence) defaultValue(fields()[20]);
        record.selectionCombineKey = fieldSetFlags()[21] ? this.selectionCombineKey : (CharSequence) defaultValue(fields()[21]);
        record.selections = fieldSetFlags()[22] ? this.selections : (java.util.List<models.avro.wager.selections.Selection_selection>) defaultValue(fields()[22]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Wager>
    WRITER$ = (org.apache.avro.io.DatumWriter<Wager>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Wager>
    READER$ = (org.apache.avro.io.DatumReader<Wager>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.origin == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.origin.customEncode(out);
    }

    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.id);
    }

    if (this.type == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.type);
    }

    if (this.status == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.status);
    }

    if (this.source == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.source);
    }

    if (this.member == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.member.customEncode(out);
    }

    if (this.session == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.session.customEncode(out);
    }

    if (this.currency == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.currency.customEncode(out);
    }

    if (this.brand == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.brand.customEncode(out);
    }

    if (this.odds == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.odds.customEncode(out);
    }

    if (this.stake == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.stake.customEncode(out);
    }

    if (this.potentialWinnings == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.potentialWinnings.customEncode(out);
    }

    if (this.gain == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.gain.customEncode(out);
    }

    if (this.numberOfSelections == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.numberOfSelections);
    }

    if (this.createdAt == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.createdAt);
    }

    if (this.updatedAt == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.updatedAt);
    }

    if (this.handledAt == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.handledAt);
    }

    if (this.acceptedAt == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.acceptedAt);
    }

    if (this.timestamp == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.timestamp);
    }

    if (this.selectedSystems == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.selectedSystems.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (Integer e0: this.selectedSystems) {
        actualSize0++;
        out.startItem();
        out.writeInt(e0);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.systemGroupName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.systemGroupName);
    }

    if (this.selectionCombineKey == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.selectionCombineKey);
    }

    if (this.selections == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      long size1 = this.selections.size();
      out.writeArrayStart();
      out.setItemCount(size1);
      long actualSize1 = 0;
      for (models.avro.wager.selections.Selection_selection e1: this.selections) {
        actualSize1++;
        out.startItem();
        e1.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize1 != size1)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.origin = null;
      } else {
        if (this.origin == null) {
          this.origin = new models.avro.wager.Wager_origin();
        }
        this.origin.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.type = null;
      } else {
        this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.status = null;
      } else {
        this.status = in.readString(this.status instanceof Utf8 ? (Utf8)this.status : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.source = null;
      } else {
        this.source = in.readString(this.source instanceof Utf8 ? (Utf8)this.source : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.member = null;
      } else {
        if (this.member == null) {
          this.member = new models.avro.wager.Wager_member();
        }
        this.member.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.session = null;
      } else {
        if (this.session == null) {
          this.session = new models.avro.wager.Wager_session();
        }
        this.session.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.currency = null;
      } else {
        if (this.currency == null) {
          this.currency = new models.avro.wager.Wager_currency();
        }
        this.currency.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.brand = null;
      } else {
        if (this.brand == null) {
          this.brand = new models.avro.wager.Wager_brand();
        }
        this.brand.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.odds = null;
      } else {
        if (this.odds == null) {
          this.odds = new models.avro.wager.Wager_odds();
        }
        this.odds.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.stake = null;
      } else {
        if (this.stake == null) {
          this.stake = new models.avro.wager.Wager_stake();
        }
        this.stake.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.potentialWinnings = null;
      } else {
        if (this.potentialWinnings == null) {
          this.potentialWinnings = new models.avro.wager.Wager_potentialWinnings();
        }
        this.potentialWinnings.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.gain = null;
      } else {
        if (this.gain == null) {
          this.gain = new models.avro.wager.Wager_gain();
        }
        this.gain.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.numberOfSelections = null;
      } else {
        this.numberOfSelections = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.createdAt = null;
      } else {
        this.createdAt = in.readString(this.createdAt instanceof Utf8 ? (Utf8)this.createdAt : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.updatedAt = null;
      } else {
        this.updatedAt = in.readString(this.updatedAt instanceof Utf8 ? (Utf8)this.updatedAt : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.handledAt = null;
      } else {
        this.handledAt = in.readString(this.handledAt instanceof Utf8 ? (Utf8)this.handledAt : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.acceptedAt = null;
      } else {
        this.acceptedAt = in.readString(this.acceptedAt instanceof Utf8 ? (Utf8)this.acceptedAt : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.timestamp = null;
      } else {
        this.timestamp = in.readString(this.timestamp instanceof Utf8 ? (Utf8)this.timestamp : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.selectedSystems = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<Integer> a0 = this.selectedSystems;
        if (a0 == null) {
          a0 = new SpecificData.Array<Integer>((int)size0, SCHEMA$.getField("selectedSystems").schema().getTypes().get(1));
          this.selectedSystems = a0;
        } else a0.clear();
        SpecificData.Array<Integer> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<Integer>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            Integer e0 = (ga0 != null ? ga0.peek() : null);
            e0 = in.readInt();
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.systemGroupName = null;
      } else {
        this.systemGroupName = in.readString(this.systemGroupName instanceof Utf8 ? (Utf8)this.systemGroupName : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.selectionCombineKey = null;
      } else {
        this.selectionCombineKey = in.readString(this.selectionCombineKey instanceof Utf8 ? (Utf8)this.selectionCombineKey : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.selections = null;
      } else {
        long size1 = in.readArrayStart();
        java.util.List<models.avro.wager.selections.Selection_selection> a1 = this.selections;
        if (a1 == null) {
          a1 = new SpecificData.Array<models.avro.wager.selections.Selection_selection>((int)size1, SCHEMA$.getField("selections").schema().getTypes().get(0));
          this.selections = a1;
        } else a1.clear();
        SpecificData.Array<models.avro.wager.selections.Selection_selection> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<models.avro.wager.selections.Selection_selection>)a1 : null);
        for ( ; 0 < size1; size1 = in.arrayNext()) {
          for ( ; size1 != 0; size1--) {
            models.avro.wager.selections.Selection_selection e1 = (ga1 != null ? ga1.peek() : null);
            if (e1 == null) {
              e1 = new models.avro.wager.selections.Selection_selection();
            }
            e1.customDecode(in);
            a1.add(e1);
          }
        }
      }

    } else {
      for (int i = 0; i < 23; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.origin = null;
          } else {
            if (this.origin == null) {
              this.origin = new models.avro.wager.Wager_origin();
            }
            this.origin.customDecode(in);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readLong();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.type = null;
          } else {
            this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.status = null;
          } else {
            this.status = in.readString(this.status instanceof Utf8 ? (Utf8)this.status : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.source = null;
          } else {
            this.source = in.readString(this.source instanceof Utf8 ? (Utf8)this.source : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.member = null;
          } else {
            if (this.member == null) {
              this.member = new models.avro.wager.Wager_member();
            }
            this.member.customDecode(in);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.session = null;
          } else {
            if (this.session == null) {
              this.session = new models.avro.wager.Wager_session();
            }
            this.session.customDecode(in);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.currency = null;
          } else {
            if (this.currency == null) {
              this.currency = new models.avro.wager.Wager_currency();
            }
            this.currency.customDecode(in);
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.brand = null;
          } else {
            if (this.brand == null) {
              this.brand = new models.avro.wager.Wager_brand();
            }
            this.brand.customDecode(in);
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.odds = null;
          } else {
            if (this.odds == null) {
              this.odds = new models.avro.wager.Wager_odds();
            }
            this.odds.customDecode(in);
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.stake = null;
          } else {
            if (this.stake == null) {
              this.stake = new models.avro.wager.Wager_stake();
            }
            this.stake.customDecode(in);
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.potentialWinnings = null;
          } else {
            if (this.potentialWinnings == null) {
              this.potentialWinnings = new models.avro.wager.Wager_potentialWinnings();
            }
            this.potentialWinnings.customDecode(in);
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.gain = null;
          } else {
            if (this.gain == null) {
              this.gain = new models.avro.wager.Wager_gain();
            }
            this.gain.customDecode(in);
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.numberOfSelections = null;
          } else {
            this.numberOfSelections = in.readInt();
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.createdAt = null;
          } else {
            this.createdAt = in.readString(this.createdAt instanceof Utf8 ? (Utf8)this.createdAt : null);
          }
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.updatedAt = null;
          } else {
            this.updatedAt = in.readString(this.updatedAt instanceof Utf8 ? (Utf8)this.updatedAt : null);
          }
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.handledAt = null;
          } else {
            this.handledAt = in.readString(this.handledAt instanceof Utf8 ? (Utf8)this.handledAt : null);
          }
          break;

        case 17:
          if (in.readIndex() != 1) {
            in.readNull();
            this.acceptedAt = null;
          } else {
            this.acceptedAt = in.readString(this.acceptedAt instanceof Utf8 ? (Utf8)this.acceptedAt : null);
          }
          break;

        case 18:
          if (in.readIndex() != 1) {
            in.readNull();
            this.timestamp = null;
          } else {
            this.timestamp = in.readString(this.timestamp instanceof Utf8 ? (Utf8)this.timestamp : null);
          }
          break;

        case 19:
          if (in.readIndex() != 1) {
            in.readNull();
            this.selectedSystems = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<Integer> a0 = this.selectedSystems;
            if (a0 == null) {
              a0 = new SpecificData.Array<Integer>((int)size0, SCHEMA$.getField("selectedSystems").schema().getTypes().get(1));
              this.selectedSystems = a0;
            } else a0.clear();
            SpecificData.Array<Integer> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<Integer>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                Integer e0 = (ga0 != null ? ga0.peek() : null);
                e0 = in.readInt();
                a0.add(e0);
              }
            }
          }
          break;

        case 20:
          if (in.readIndex() != 1) {
            in.readNull();
            this.systemGroupName = null;
          } else {
            this.systemGroupName = in.readString(this.systemGroupName instanceof Utf8 ? (Utf8)this.systemGroupName : null);
          }
          break;

        case 21:
          if (in.readIndex() != 1) {
            in.readNull();
            this.selectionCombineKey = null;
          } else {
            this.selectionCombineKey = in.readString(this.selectionCombineKey instanceof Utf8 ? (Utf8)this.selectionCombineKey : null);
          }
          break;

        case 22:
          if (in.readIndex() != 0) {
            in.readNull();
            this.selections = null;
          } else {
            long size1 = in.readArrayStart();
            java.util.List<models.avro.wager.selections.Selection_selection> a1 = this.selections;
            if (a1 == null) {
              a1 = new SpecificData.Array<models.avro.wager.selections.Selection_selection>((int)size1, SCHEMA$.getField("selections").schema().getTypes().get(0));
              this.selections = a1;
            } else a1.clear();
            SpecificData.Array<models.avro.wager.selections.Selection_selection> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<models.avro.wager.selections.Selection_selection>)a1 : null);
            for ( ; 0 < size1; size1 = in.arrayNext()) {
              for ( ; size1 != 0; size1--) {
                models.avro.wager.selections.Selection_selection e1 = (ga1 != null ? ga1.peek() : null);
                if (e1 == null) {
                  e1 = new models.avro.wager.selections.Selection_selection();
                }
                e1.customDecode(in);
                a1.add(e1);
              }
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










