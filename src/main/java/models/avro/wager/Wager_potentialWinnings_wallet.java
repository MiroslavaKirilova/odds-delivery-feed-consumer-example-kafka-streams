/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package models.avro.wager;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@org.apache.avro.specific.AvroGenerated
public class Wager_potentialWinnings_wallet extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6713149213756294060L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Wager_potentialWinnings_wallet\",\"namespace\":\"models.avro.wager\",\"fields\":[{\"name\":\"compartment\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_potentialWinnings_wallet_compartment\",\"fields\":[{\"name\":\"real\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_potentialWinnings_wallet_compartment_real\",\"fields\":[{\"name\":\"amount\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null},{\"name\":\"virtual\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Wager_potentialWinnings_wallet_compartment_virtual\",\"fields\":[{\"name\":\"amount\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Wager_potentialWinnings_wallet> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Wager_potentialWinnings_wallet> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Wager_potentialWinnings_wallet> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Wager_potentialWinnings_wallet> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Wager_potentialWinnings_wallet> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Wager_potentialWinnings_wallet to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Wager_potentialWinnings_wallet from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Wager_potentialWinnings_wallet instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Wager_potentialWinnings_wallet fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private models.avro.wager.Wager_potentialWinnings_wallet_compartment compartment;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Wager_potentialWinnings_wallet() {}

  /**
   * All-args constructor.
   * @param compartment The new value for compartment
   */
  public Wager_potentialWinnings_wallet(models.avro.wager.Wager_potentialWinnings_wallet_compartment compartment) {
    this.compartment = compartment;
  }

  @Override
  public SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public Object get(int field$) {
    switch (field$) {
    case 0: return compartment;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: compartment = (models.avro.wager.Wager_potentialWinnings_wallet_compartment)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'compartment' field.
   * @return The value of the 'compartment' field.
   */
  public models.avro.wager.Wager_potentialWinnings_wallet_compartment getCompartment() {
    return compartment;
  }


  /**
   * Sets the value of the 'compartment' field.
   * @param value the value to set.
   */
  public void setCompartment(models.avro.wager.Wager_potentialWinnings_wallet_compartment value) {
    this.compartment = value;
  }

  /**
   * Creates a new Wager_potentialWinnings_wallet RecordBuilder.
   * @return A new Wager_potentialWinnings_wallet RecordBuilder
   */
  public static models.avro.wager.Wager_potentialWinnings_wallet.Builder newBuilder() {
    return new models.avro.wager.Wager_potentialWinnings_wallet.Builder();
  }

  /**
   * Creates a new Wager_potentialWinnings_wallet RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Wager_potentialWinnings_wallet RecordBuilder
   */
  public static models.avro.wager.Wager_potentialWinnings_wallet.Builder newBuilder(models.avro.wager.Wager_potentialWinnings_wallet.Builder other) {
    if (other == null) {
      return new models.avro.wager.Wager_potentialWinnings_wallet.Builder();
    } else {
      return new models.avro.wager.Wager_potentialWinnings_wallet.Builder(other);
    }
  }

  /**
   * Creates a new Wager_potentialWinnings_wallet RecordBuilder by copying an existing Wager_potentialWinnings_wallet instance.
   * @param other The existing instance to copy.
   * @return A new Wager_potentialWinnings_wallet RecordBuilder
   */
  public static models.avro.wager.Wager_potentialWinnings_wallet.Builder newBuilder(models.avro.wager.Wager_potentialWinnings_wallet other) {
    if (other == null) {
      return new models.avro.wager.Wager_potentialWinnings_wallet.Builder();
    } else {
      return new models.avro.wager.Wager_potentialWinnings_wallet.Builder(other);
    }
  }

  /**
   * RecordBuilder for Wager_potentialWinnings_wallet instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Wager_potentialWinnings_wallet>
    implements org.apache.avro.data.RecordBuilder<Wager_potentialWinnings_wallet> {

    private models.avro.wager.Wager_potentialWinnings_wallet_compartment compartment;
    private models.avro.wager.Wager_potentialWinnings_wallet_compartment.Builder compartmentBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(models.avro.wager.Wager_potentialWinnings_wallet.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.compartment)) {
        this.compartment = data().deepCopy(fields()[0].schema(), other.compartment);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasCompartmentBuilder()) {
        this.compartmentBuilder = models.avro.wager.Wager_potentialWinnings_wallet_compartment.newBuilder(other.getCompartmentBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Wager_potentialWinnings_wallet instance
     * @param other The existing instance to copy.
     */
    private Builder(models.avro.wager.Wager_potentialWinnings_wallet other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.compartment)) {
        this.compartment = data().deepCopy(fields()[0].schema(), other.compartment);
        fieldSetFlags()[0] = true;
      }
      this.compartmentBuilder = null;
    }

    /**
      * Gets the value of the 'compartment' field.
      * @return The value.
      */
    public models.avro.wager.Wager_potentialWinnings_wallet_compartment getCompartment() {
      return compartment;
    }


    /**
      * Sets the value of the 'compartment' field.
      * @param value The value of 'compartment'.
      * @return This builder.
      */
    public models.avro.wager.Wager_potentialWinnings_wallet.Builder setCompartment(models.avro.wager.Wager_potentialWinnings_wallet_compartment value) {
      validate(fields()[0], value);
      this.compartmentBuilder = null;
      this.compartment = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'compartment' field has been set.
      * @return True if the 'compartment' field has been set, false otherwise.
      */
    public boolean hasCompartment() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'compartment' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public models.avro.wager.Wager_potentialWinnings_wallet_compartment.Builder getCompartmentBuilder() {
      if (compartmentBuilder == null) {
        if (hasCompartment()) {
          setCompartmentBuilder(models.avro.wager.Wager_potentialWinnings_wallet_compartment.newBuilder(compartment));
        } else {
          setCompartmentBuilder(models.avro.wager.Wager_potentialWinnings_wallet_compartment.newBuilder());
        }
      }
      return compartmentBuilder;
    }

    /**
     * Sets the Builder instance for the 'compartment' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public models.avro.wager.Wager_potentialWinnings_wallet.Builder setCompartmentBuilder(models.avro.wager.Wager_potentialWinnings_wallet_compartment.Builder value) {
      clearCompartment();
      compartmentBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'compartment' field has an active Builder instance
     * @return True if the 'compartment' field has an active Builder instance
     */
    public boolean hasCompartmentBuilder() {
      return compartmentBuilder != null;
    }

    /**
      * Clears the value of the 'compartment' field.
      * @return This builder.
      */
    public models.avro.wager.Wager_potentialWinnings_wallet.Builder clearCompartment() {
      compartment = null;
      compartmentBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Wager_potentialWinnings_wallet build() {
      try {
        Wager_potentialWinnings_wallet record = new Wager_potentialWinnings_wallet();
        if (compartmentBuilder != null) {
          try {
            record.compartment = this.compartmentBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("compartment"));
            throw e;
          }
        } else {
          record.compartment = fieldSetFlags()[0] ? this.compartment : (models.avro.wager.Wager_potentialWinnings_wallet_compartment) defaultValue(fields()[0]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Wager_potentialWinnings_wallet>
    WRITER$ = (org.apache.avro.io.DatumWriter<Wager_potentialWinnings_wallet>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Wager_potentialWinnings_wallet>
    READER$ = (org.apache.avro.io.DatumReader<Wager_potentialWinnings_wallet>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.compartment == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.compartment.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.compartment = null;
      } else {
        if (this.compartment == null) {
          this.compartment = new models.avro.wager.Wager_potentialWinnings_wallet_compartment();
        }
        this.compartment.customDecode(in);
      }

    } else {
      for (int i = 0; i < 1; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.compartment = null;
          } else {
            if (this.compartment == null) {
              this.compartment = new models.avro.wager.Wager_potentialWinnings_wallet_compartment();
            }
            this.compartment.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










