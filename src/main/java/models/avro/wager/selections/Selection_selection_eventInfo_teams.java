/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package models.avro.wager.selections;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@org.apache.avro.specific.AvroGenerated
public class Selection_selection_eventInfo_teams extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5399901941668561489L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Selection_selection_eventInfo_teams\",\"namespace\":\"models.avro.wager.selections\",\"fields\":[{\"name\":\"home\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Selection_selection_eventInfo_teams_home\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"away\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Selection_selection_eventInfo_teams_away\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Selection_selection_eventInfo_teams> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Selection_selection_eventInfo_teams> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Selection_selection_eventInfo_teams> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Selection_selection_eventInfo_teams> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Selection_selection_eventInfo_teams> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Selection_selection_eventInfo_teams to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Selection_selection_eventInfo_teams from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Selection_selection_eventInfo_teams instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Selection_selection_eventInfo_teams fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private models.avro.wager.selections.Selection_selection_eventInfo_teams_home home;
  private models.avro.wager.selections.Selection_selection_eventInfo_teams_away away;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Selection_selection_eventInfo_teams() {}

  /**
   * All-args constructor.
   * @param home The new value for home
   * @param away The new value for away
   */
  public Selection_selection_eventInfo_teams(models.avro.wager.selections.Selection_selection_eventInfo_teams_home home, models.avro.wager.selections.Selection_selection_eventInfo_teams_away away) {
    this.home = home;
    this.away = away;
  }

  @Override
  public SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public Object get(int field$) {
    switch (field$) {
    case 0: return home;
    case 1: return away;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: home = (models.avro.wager.selections.Selection_selection_eventInfo_teams_home)value$; break;
    case 1: away = (models.avro.wager.selections.Selection_selection_eventInfo_teams_away)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'home' field.
   * @return The value of the 'home' field.
   */
  public models.avro.wager.selections.Selection_selection_eventInfo_teams_home getHome() {
    return home;
  }


  /**
   * Sets the value of the 'home' field.
   * @param value the value to set.
   */
  public void setHome(models.avro.wager.selections.Selection_selection_eventInfo_teams_home value) {
    this.home = value;
  }

  /**
   * Gets the value of the 'away' field.
   * @return The value of the 'away' field.
   */
  public models.avro.wager.selections.Selection_selection_eventInfo_teams_away getAway() {
    return away;
  }


  /**
   * Sets the value of the 'away' field.
   * @param value the value to set.
   */
  public void setAway(models.avro.wager.selections.Selection_selection_eventInfo_teams_away value) {
    this.away = value;
  }

  /**
   * Creates a new Selection_selection_eventInfo_teams RecordBuilder.
   * @return A new Selection_selection_eventInfo_teams RecordBuilder
   */
  public static models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder newBuilder() {
    return new models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder();
  }

  /**
   * Creates a new Selection_selection_eventInfo_teams RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Selection_selection_eventInfo_teams RecordBuilder
   */
  public static models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder newBuilder(models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder other) {
    if (other == null) {
      return new models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder();
    } else {
      return new models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder(other);
    }
  }

  /**
   * Creates a new Selection_selection_eventInfo_teams RecordBuilder by copying an existing Selection_selection_eventInfo_teams instance.
   * @param other The existing instance to copy.
   * @return A new Selection_selection_eventInfo_teams RecordBuilder
   */
  public static models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder newBuilder(models.avro.wager.selections.Selection_selection_eventInfo_teams other) {
    if (other == null) {
      return new models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder();
    } else {
      return new models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder(other);
    }
  }

  /**
   * RecordBuilder for Selection_selection_eventInfo_teams instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Selection_selection_eventInfo_teams>
    implements org.apache.avro.data.RecordBuilder<Selection_selection_eventInfo_teams> {

    private models.avro.wager.selections.Selection_selection_eventInfo_teams_home home;
    private models.avro.wager.selections.Selection_selection_eventInfo_teams_home.Builder homeBuilder;
    private models.avro.wager.selections.Selection_selection_eventInfo_teams_away away;
    private models.avro.wager.selections.Selection_selection_eventInfo_teams_away.Builder awayBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.home)) {
        this.home = data().deepCopy(fields()[0].schema(), other.home);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasHomeBuilder()) {
        this.homeBuilder = models.avro.wager.selections.Selection_selection_eventInfo_teams_home.newBuilder(other.getHomeBuilder());
      }
      if (isValidValue(fields()[1], other.away)) {
        this.away = data().deepCopy(fields()[1].schema(), other.away);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasAwayBuilder()) {
        this.awayBuilder = models.avro.wager.selections.Selection_selection_eventInfo_teams_away.newBuilder(other.getAwayBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Selection_selection_eventInfo_teams instance
     * @param other The existing instance to copy.
     */
    private Builder(models.avro.wager.selections.Selection_selection_eventInfo_teams other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.home)) {
        this.home = data().deepCopy(fields()[0].schema(), other.home);
        fieldSetFlags()[0] = true;
      }
      this.homeBuilder = null;
      if (isValidValue(fields()[1], other.away)) {
        this.away = data().deepCopy(fields()[1].schema(), other.away);
        fieldSetFlags()[1] = true;
      }
      this.awayBuilder = null;
    }

    /**
      * Gets the value of the 'home' field.
      * @return The value.
      */
    public models.avro.wager.selections.Selection_selection_eventInfo_teams_home getHome() {
      return home;
    }


    /**
      * Sets the value of the 'home' field.
      * @param value The value of 'home'.
      * @return This builder.
      */
    public models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder setHome(models.avro.wager.selections.Selection_selection_eventInfo_teams_home value) {
      validate(fields()[0], value);
      this.homeBuilder = null;
      this.home = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'home' field has been set.
      * @return True if the 'home' field has been set, false otherwise.
      */
    public boolean hasHome() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'home' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public models.avro.wager.selections.Selection_selection_eventInfo_teams_home.Builder getHomeBuilder() {
      if (homeBuilder == null) {
        if (hasHome()) {
          setHomeBuilder(models.avro.wager.selections.Selection_selection_eventInfo_teams_home.newBuilder(home));
        } else {
          setHomeBuilder(models.avro.wager.selections.Selection_selection_eventInfo_teams_home.newBuilder());
        }
      }
      return homeBuilder;
    }

    /**
     * Sets the Builder instance for the 'home' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder setHomeBuilder(models.avro.wager.selections.Selection_selection_eventInfo_teams_home.Builder value) {
      clearHome();
      homeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'home' field has an active Builder instance
     * @return True if the 'home' field has an active Builder instance
     */
    public boolean hasHomeBuilder() {
      return homeBuilder != null;
    }

    /**
      * Clears the value of the 'home' field.
      * @return This builder.
      */
    public models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder clearHome() {
      home = null;
      homeBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'away' field.
      * @return The value.
      */
    public models.avro.wager.selections.Selection_selection_eventInfo_teams_away getAway() {
      return away;
    }


    /**
      * Sets the value of the 'away' field.
      * @param value The value of 'away'.
      * @return This builder.
      */
    public models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder setAway(models.avro.wager.selections.Selection_selection_eventInfo_teams_away value) {
      validate(fields()[1], value);
      this.awayBuilder = null;
      this.away = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'away' field has been set.
      * @return True if the 'away' field has been set, false otherwise.
      */
    public boolean hasAway() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'away' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public models.avro.wager.selections.Selection_selection_eventInfo_teams_away.Builder getAwayBuilder() {
      if (awayBuilder == null) {
        if (hasAway()) {
          setAwayBuilder(models.avro.wager.selections.Selection_selection_eventInfo_teams_away.newBuilder(away));
        } else {
          setAwayBuilder(models.avro.wager.selections.Selection_selection_eventInfo_teams_away.newBuilder());
        }
      }
      return awayBuilder;
    }

    /**
     * Sets the Builder instance for the 'away' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder setAwayBuilder(models.avro.wager.selections.Selection_selection_eventInfo_teams_away.Builder value) {
      clearAway();
      awayBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'away' field has an active Builder instance
     * @return True if the 'away' field has an active Builder instance
     */
    public boolean hasAwayBuilder() {
      return awayBuilder != null;
    }

    /**
      * Clears the value of the 'away' field.
      * @return This builder.
      */
    public models.avro.wager.selections.Selection_selection_eventInfo_teams.Builder clearAway() {
      away = null;
      awayBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Selection_selection_eventInfo_teams build() {
      try {
        Selection_selection_eventInfo_teams record = new Selection_selection_eventInfo_teams();
        if (homeBuilder != null) {
          try {
            record.home = this.homeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("home"));
            throw e;
          }
        } else {
          record.home = fieldSetFlags()[0] ? this.home : (models.avro.wager.selections.Selection_selection_eventInfo_teams_home) defaultValue(fields()[0]);
        }
        if (awayBuilder != null) {
          try {
            record.away = this.awayBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("away"));
            throw e;
          }
        } else {
          record.away = fieldSetFlags()[1] ? this.away : (models.avro.wager.selections.Selection_selection_eventInfo_teams_away) defaultValue(fields()[1]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Selection_selection_eventInfo_teams>
    WRITER$ = (org.apache.avro.io.DatumWriter<Selection_selection_eventInfo_teams>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Selection_selection_eventInfo_teams>
    READER$ = (org.apache.avro.io.DatumReader<Selection_selection_eventInfo_teams>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.home == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.home.customEncode(out);
    }

    if (this.away == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.away.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.home = null;
      } else {
        if (this.home == null) {
          this.home = new models.avro.wager.selections.Selection_selection_eventInfo_teams_home();
        }
        this.home.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.away = null;
      } else {
        if (this.away == null) {
          this.away = new models.avro.wager.selections.Selection_selection_eventInfo_teams_away();
        }
        this.away.customDecode(in);
      }

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.home = null;
          } else {
            if (this.home == null) {
              this.home = new models.avro.wager.selections.Selection_selection_eventInfo_teams_home();
            }
            this.home.customDecode(in);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.away = null;
          } else {
            if (this.away == null) {
              this.away = new models.avro.wager.selections.Selection_selection_eventInfo_teams_away();
            }
            this.away.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










